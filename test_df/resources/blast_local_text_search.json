{"executorId":0,"id":"d624043c-01a0-446b-9816-e17006ed139f","dataFxnDefId":"099f6c94-7e66-4150-b751-88fbe2b9053a","serviceName":"BlastLocalTextSearch","assembly":null,"inputFields":{"query":{"id":"query","dataType":"string","contentType":"chemical/x-sequence","selectorType":null,"data":"DIVMSQSPSSLAVSAGEKVTMSCKSSQSLLNSRTRKNYLAWYQQKPGQSPKVLIYWASTRESGVPDRFTGRGSGTDFTLTISSVQAEDQAVYYCKQAYIPPLTFGAGTKLELKRADAAPTVSIFPPSSEQLTSGGASVVCFLNNFYPKDINVKWKIDGSERQNGVLNSWTDQDSKDSTYSMSSTLTLTKDEYERHNSYTCEATHKTSTSPIVKSFNRNEX"},"method":{"id":"method","dataType":"string","contentType":null,"selectorType":null,"data":"BLASTP"},"databaseName":{"id":"databaseName","dataType":"string","contentType":null,"selectorType":null,"data":"human_IG_germline"},"maxHits":{"id":"maxHits","dataType":"integer","contentType":null,"selectorType":null,"data":100},"showMultipleAlignments":{"id":"showMultipleAlignments","dataType":"boolean","contentType":null,"selectorType":null,"data":true},"blastDbPath":{"id":"blastDbPath","dataType":"string","contentType":null,"selectorType":null,"data":"C:\\db\\ncbi"}},"maximumOutputColumns":10,"maximumOutputTables":1,"resultTables":null,"serviceUri":"glysade.python","inputColumns":{},"webServiceRequest":null,"requestId":-1,"tkid":null,"script":null,"updateBehavior":"automatic","allowedClients":["Analyst","WebPlayer"],"limitBy":"none","ironPython":"############################################\n#  Copyright 2019 Glysade LLC             #\n############################################\n\nimport sys,clr\nfrom Spotfire.Dxp.Data import DataTable, DataManager\nfrom Spotfire.Dxp.Application import PanelTypeIdentifiers\nfrom Spotfire.Dxp.Application import Panel\nimport Spotfire.Dxp.Application.PanelCollection\n\nfrom System import AppDomain\nfor asm in AppDomain.CurrentDomain.GetAssemblies():\n    if asm.GetName().Name == 'Charts':\n        clr.AddReference(asm.FullName)\n\nfrom Charts import ChartsModel\nmodel_type = ChartsModel\n\n#tableId pass in args\ndataTable = None\n\nfor table in Document.Data.Tables:\n    if str(table.Id) == tableId:\n        dataTable = table\n\nif not dataTable:\n    raise Exception('target table not found')\n\npage = Document.Pages.AddNew('Blast (local) text query Results')\npanelsToHide = [PanelTypeIdentifiers.DataPanel, PanelTypeIdentifiers.DetailsOnDemandPanel]\n\nfor panel in page.Panels:\n    if panel.TypeId in panelsToHide:\n        if panel.Visible:\n            panel.Visible = False\n        \n\nfilteringScheme = Document.FilteringSchemes[0]\npage.FilterPanel.FilteringSchemeReference = filteringScheme\n\ntableVis = page.Visuals.AddNew[model_type]()\ntableVis.SetKeyValue('visualization','table-visualization')\ntableVis.DataTable = dataTable\ntableVis.ConfigureColumns()\ntableVis.Marking = Document.Data.Markings.DefaultMarkingReference\n\ntableVis.SetActiveVisual()\npage.AutoConfigure()\n","chartsFxnType":null,"chartsRequest":null}